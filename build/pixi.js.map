{"version":3,"file":"pixi.js","sourceRoot":"","sources":["../src/pixi.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,OAAO,MAAM,cAAc,CAAC;AACxC,OAAO,KAAK,YAAY,MAAM,SAAS,CAAC;AACxC,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAM1C,4DAA4D;AAC5D,MAAM,kBAAmB,SAAQ,YAAY,CAAC,WAAW;IACvD,YAAY,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,OAAO,EAAsB;QACjE,IAAI,CAAC,OAAO,EAAE;YACZ,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;SAChE;QAED,MAAM,gBAAgB,GAAG,UAAU,IAAI,UAAU,CAAC,GAAG,EAAE,CAAC;QAExD,KAAK,CAAC;YACJ,OAAO;YACP,UAAU,EAAE,gBAAgB;YAC5B,GAAG,OAAO;SACX,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC;IAC/C,CAAC;CACF;AAED,MAAM,CAAC,MAAM,IAAI,GAAG;IAClB,GAAG,YAAY;IACf,OAAO,EAAE;QACP,GAAG,YAAY,CAAC,OAAO;QACvB,GAAG,OAAO;KACX;IACD,WAAW,EAAE,kBAAkB;CAChC,CAAC","sourcesContent":["import { ExpoWebGLRenderingContext } from \"expo-gl\";\nimport * as filters from \"pixi-filters\";\nimport * as PIXIInstance from \"pixi.js\";\nimport { PixelRatio } from \"react-native\";\n\ninterface ApplicationOptions extends PIXIInstance.ApplicationOptions {\n  context: ExpoWebGLRenderingContext;\n}\n\n// https://pixijs.download/v4.8.9/docs/PIXI.Application.html\nclass PIXIWebApplication extends PIXIInstance.Application {\n  constructor({ context, resolution, ...options }: ApplicationOptions) {\n    if (!context) {\n      throw new Error(\"PIXI context must be a valid WebGL context.\");\n    }\n\n    const targetResolution = resolution ?? PixelRatio.get();\n\n    super({\n      context,\n      resolution: targetResolution,\n      ...options,\n    });\n\n    this.ticker.add(() => context.endFrameEXP());\n  }\n}\n\nexport const PIXI = {\n  ...PIXIInstance,\n  filters: {\n    ...PIXIInstance.filters,\n    ...filters,\n  },\n  Application: PIXIWebApplication,\n};\n"]}